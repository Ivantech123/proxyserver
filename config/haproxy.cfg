global
    # Уменьшаем уровень логирования
    log /dev/log local0 warning
    chroot /var/lib/haproxy
    stats socket /var/lib/haproxy/stats mode 660 level admin expose-fd listeners
    stats timeout 10s
    user haproxy
    group haproxy
    daemon
    # Снижаем максимальное количество соединений
    maxconn 2000
    # Уменьшаем количество процессов и потоков
    nbproc 1
    nbthread 2
    cpu-map auto:1/1-2 0-1
    tune.ssl.default-dh-param 2048
    # Оптимизация буферов для снижения потребления памяти
    tune.bufsize 16384
    tune.maxrewrite 1024
    spread-checks 10
    hard-stop-after 15s
    tune.idle-pool.shared on
    tune.idle-pool.maxidle 64
    tune.idle-pool.maxlife 1800
    tune.pipesize 16384
    # Оптимизация кэша SSL
    tune.ssl.cachesize 20000

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # SSL configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    # Уменьшаем уровень логирования HTTP
    option  dontlognull
    option  http-server-close
    option  redispatch
    option  http-buffer-request
    # Уменьшаем количество повторных попыток
    retries 2
    backlog 5000
    # Снижаем максимальное количество соединений
    maxconn 1500
    # Оптимизация таймаутов для снижения потребления ресурсов
    timeout connect 5000
    timeout client  1800000
    timeout server  1800000
    timeout http-request 15000
    timeout http-keep-alive 30000
    timeout queue 30000
    timeout tunnel 1800000
    timeout client-fin 15000
    timeout server-fin 15000
    timeout check 5s
    # Дополнительные оптимизации
    option tcp-smart-accept
    option tcp-smart-connect
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Кэширование для повышения производительности и снижения нагрузки
cache proxy-cache
    total-max-size 100
    max-age 120
    max-object-size 1048576

frontend proxy_frontend
    bind *:3128 ssl crt /etc/haproxy/certs/server.pem alpn h2,http/1.1
    mode http
    option forwardfor
    option http-server-close
    # Снижаем максимальное количество соединений
    maxconn 1000
    option http-buffer-request
    timeout client 30s
    # Добавляем сжатие для уменьшения трафика
    compression algo gzip
    compression type text/html text/plain text/css application/javascript
    
    # HTTP/2 settings
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
    
    # Authentication
    auth-request /auth
    http-request auth unless { path /auth }
    
    default_backend proxy_backend

backend proxy_backend
    mode http
    balance roundrobin
    # Оптимизация проверок доступности
    option httpchk HEAD / HTTP/1.1
    http-check expect status 200
    option http-reuse safe
    # Используем кэширование для снижения нагрузки
    http-request cache-use proxy-cache
    http-response cache-store proxy-cache
    # Оптимизация таймаутов
    timeout connect 5s
    timeout server 30s
    # Уменьшаем количество соединений на сервер
    server proxy1 127.0.0.1:3129 check maxconn 500 weight 10 inter 10s downinter 5s rise 2 fall 3
